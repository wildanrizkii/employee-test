// Necessary for Next auth
model Account {
    id                       String  @map("_id")  @id @default(nanoid(11))
    userId                   String
    type                     String 
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String  @map("_id")  @id @default(nanoid(11))
    sessionToken String   @unique
    userId       String
    expires      DateTime 
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String  @map("_id")  @id @default(nanoid(11))
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    id         String  @map("_id")  @id @default(nanoid(11))
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
